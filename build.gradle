buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "pl.allegro.tech.build:axion-release-plugin:1.9.0"
        classpath "com.bmuschko:gradle-nexus-plugin:2.3.1"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
    packageGroup = "com.toomuchcoding"
}

apply plugin: "pl.allegro.tech.build.axion-release"

scmVersion {
    tag { prefix = "jsonassert" }
    createReleaseCommit = true
    releaseCommitMessage { version, position -> "Release version: ${version}\n\n[ci skip]" }
    hooks {
        pre "fileUpdate", [file       : "README.adoc",
                           pattern    : { v, p -> /:lib_version:.*/ },
                           replacement: { v, p -> ":lib_version: $v" }]
    }
}

allprojects {
    project.version = scmVersion.version
}

subprojects {

    group = 'com.toomuchcoding.jsonassert'
    description = "JSON assertion library"

    repositories {
        jcenter()
    }

    apply plugin: 'groovy'

    sourceCompatibility = 1.7

    dependencies {
        compile "com.jayway.jsonpath:json-path:${jsonPathVersion}"

        testImplementation "org.codehaus.groovy:groovy-all:2.4.17"
        testImplementation "org.spockframework:spock-core:1.0-groovy-2.4"
        testImplementation 'cglib:cglib-nodep:3.1'
        testImplementation 'org.objenesis:objenesis:2.1'
        testImplementation "ch.qos.logback:logback-classic:1.1.2"
    }

    test {
        maxParallelForks = Runtime.runtime.availableProcessors() / 2
    }
}

configure(subprojects - project(":jsonassert-shadow")) {

    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    publishing {
        publications {
            code(MavenPublication) {
                from components.java
                pom.withXml {
                    //#89 - workaround to not to have only runtime dependencies in generated pom.xml
                    //Known limitation in maven-publish - - http://forums.gradle.org/gradle/topics/maven_publish_plugin_generated_pom_making_dependency_scope_runtime#reply_14120711
                    asNode().dependencies.'*'.findAll() {
                        it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }
                    }.each() {
                        it.scope*.value = 'compile'
                    }
                }
            }
        }
    }

    if (!version.contains('SNAPSHOT')) {
        apply from: "$rootDir/gradle/release.gradle"
    }
}

